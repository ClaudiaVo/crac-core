# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url = jdbc:mysql://localhost/crac_db

# Username and password
spring.datasource.username = root
spring.datasource.password =

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Set the file size limit (default 1Mb). If you want to specify that files be 
# unlimited set the multipart.maxFileSize property to -1.
multipart.maxFileSize = 1Mb

# Set the total request size for a multipart/form-data (default 10Mb)
multipart.maxRequestSize = 10Mb
multipart.location = 

# Set the connection to the Elasticsearch Server

crac.elastic.url = localhost
crac.elastic.port = 9300
crac.elastic.bindEStoSearch = true

crac.boot.enable = true

crac.search.bindUserExperience = true
crac.search.bindUserRelations = true
crac.search.augmentationCriteria = 0.2
crac.search.decreaseLikeFactor = 4

crac.eval.decreaseValues = 4

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = validate
#spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
